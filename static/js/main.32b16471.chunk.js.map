{"version":3,"sources":["Quote/Quote.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Quote","quote","newlyDefinedText","text","newlyDefinedAuthor","author","randomNumberHandler","className","onClick","App","useState","quotes","setQuotes","setQuote","length","maxRandomNumber","randomNumber","Math","floor","random","useEffect","fetch","then","results","json","href","style","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAGe,SAASA,EAAT,GAGX,IAAD,IAFDC,MAAeC,EAEd,EAFQC,KAAgCC,EAExC,EAFgCC,OACjCC,EACC,EADDA,oBAEA,OACE,sBAAKC,UAAU,iDAAf,UACE,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,cAAf,SAA8BL,IAC7BE,GACC,sBAAKG,UAAU,qBAAf,cAAsCH,KAExC,wBACEG,UAAU,qCACVC,QAASF,EAFX,0BCFS,SAASG,IAAO,IAAD,EACAC,mBAAS,IADT,mBACrBC,EADqB,KACbC,EADa,OAEFF,mBAAS,CACjCP,KAAM,GACNE,OAAQ,KAJkB,mBAErBJ,EAFqB,KAEdY,EAFc,KAOtBP,EAAsB,WAC1B,GAAKK,EAAOG,OAAZ,CAIA,IAAMC,EAAkBJ,EAAOG,OACzBE,EAAeC,KAAKC,MAAMD,KAAKE,SAAWJ,GAEhDF,EAASF,EAAOK,MAgBlB,OAbAI,qBAAU,WACRd,MAEC,CAACK,IAEJS,qBAAU,WACRC,MAAM,+BACHC,MAAK,SAACC,GAAD,OAAaA,EAAQC,UAC1BF,MAAK,SAACX,GACLC,EAAUD,QAEb,IAGD,qBAAKJ,UAAU,6BAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,cAAC,EAAD,CAAON,MAAOA,EAAOK,oBAAqBA,IAC1C,sBAAKC,UAAU,4BAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,mBAAGkB,KAAK,mDAAR,SACE,cAAC,IAAD,CAAclB,UAAU,WAE1B,mBAAGkB,KAAK,0JAAR,SACE,cAAC,IAAD,SAGJ,mBAAGA,KAAK,+BAAR,SACE,sBAAKlB,UAAU,+BAAf,UACE,cAAC,IAAD,CACEmB,MAAO,CAAEC,MAAO,WAChBpB,UAAU,SAEZ,sBAAMmB,MAAO,CAAEC,MAAO,WAAtB,6CC9Dd,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.32b16471.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Quote.scss\";\n\nexport default function Quote({\n  quote: { text: newlyDefinedText, author: newlyDefinedAuthor },\n  randomNumberHandler,\n}) {\n  return (\n    <div className=\"quote m-auto p-5 flex flex-col justify-between\">\n      <div className=\"quote__share\"></div>\n      <div className=\"quote__text\">{newlyDefinedText}</div>\n      {newlyDefinedAuthor && (\n        <div className=\"quote__author mt-3\">-{newlyDefinedAuthor}</div>\n      )}\n      <button\n        className=\"quote__button mt-3 ml-auto mr-auto\"\n        onClick={randomNumberHandler}\n      >\n        New quote\n      </button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\n// Style\nimport \"./App.scss\";\n\n// Icons\nimport { AiFillGithub, AiOutlineCopyrightCircle } from \"react-icons/ai\";\nimport { FiFigma } from \"react-icons/fi\";\n\n// Components\nimport Quote from \"./Quote/Quote\";\n\nexport default function App() {\n  const [quotes, setQuotes] = useState([]);\n  const [quote, setQuote] = useState({\n    text: \"\",\n    author: \"\",\n  });\n\n  const randomNumberHandler = () => {\n    if (!quotes.length) {\n      return;\n    }\n\n    const maxRandomNumber = quotes.length;\n    const randomNumber = Math.floor(Math.random() * maxRandomNumber);\n\n    setQuote(quotes[randomNumber]);\n  };\n\n  useEffect(() => {\n    randomNumberHandler();\n    // eslint-disable-next-line\n  }, [quotes]);\n\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\")\n      .then((results) => results.json())\n      .then((quotes) => {\n        setQuotes(quotes);\n      });\n  }, []);\n\n  return (\n    <div className=\"app flex flex-col h-screen\">\n      <div className=\"m-auto w-10/12 lg:w-6/12\">\n        <Quote quote={quote} randomNumberHandler={randomNumberHandler} />\n        <div className=\"flex justify-between mt-4\">\n          <div className=\"flex items-center\">\n            <a href=\"https://github.com/AlexBeje/random-quote-machine\">\n              <AiFillGithub className=\"mr-2\" />\n            </a>\n            <a href=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FD69IGPdHwsJL651DnBEVeR%2Frandom-quote-machine%3Fnode-id%3D0%253A1\">\n              <FiFigma />\n            </a>\n          </div>\n          <a href=\"https://www.alexbejenaru.dev\">\n            <div className=\"app_author flex items-center\">\n              <AiOutlineCopyrightCircle\n                style={{ color: \"#17c6fe\" }}\n                className=\"mr-1\"\n              />\n              <span style={{ color: \"#17c6fe\" }}>Alexandru Bejenaru</span>\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport \"./tailwind.output.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}